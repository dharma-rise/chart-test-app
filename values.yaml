# Default values for test-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: dharmatkj/simple-go-color
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "test-app"
fullnameOverride: "test-app-chart"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "rise"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8001

# environment application

environment:
 - name: "APP_VERSION"
   value: "1.0.1"
 - name: "APP_COLOR"
   value: "red" 

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 150m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 80Mi

nodeSelector: {}

tolerations: []

# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: app-development
#           operator: In
#           values:
#           - "true"
#         - key: db-development
#           operator: In
#           values:
#           - "false"
#         - key: monitor-development
#           operator: In
#           values:
#           - "false"

# rollingUpdate:
#   enabled: true
#   maxSurge: "100%"
#   maxUnavailable: "50%"

# pdb:
#   minAvailable: 2

healthcheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /liveness
      port: http
    initialDelaySeconds: 15
    periodSeconds: 20
  readinessProbe:
    httpGet:
      path: /readiness
      port: http
    initialDelaySeconds: 5
    periodSeconds: 10
